/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.smict.struts.action;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

import com.smict.struts.data.DBaward;
import com.smict.struts.form.AwardForm;

/** 
 * MyEclipse Struts
 * Creation date: 10-19-2015
 * 
 * XDoclet definition:
 * @struts.action path="/award" name="awardForm" input="/award.jsp" scope="request" validate="true"
 */
public class AwardAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AwardForm awardForm = (AwardForm) form;
		String forwardText = "";
		HttpSession session = request.getSession();
		if(session.getAttribute("username") == null){
			return mapping.findForward("nologin");
		}
		DBaward dbaward = new DBaward();
		DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH-mm-ss");
		Date date = new Date();
		if(request.getParameter("upload") != null){
		// --------------------- Upload Start ---------------------------
			File folderaward = new File(getServlet().getServletContext().getRealPath("/")+"upload/award");
			if(!folderaward.exists()){
				folderaward.mkdir();
			}
			FileOutputStream outputStream = null;
			String award_name = request.getParameter("tb_awardname"),
			slc_bu = request.getParameter("slc_bu");
			
			try {
				award_name=new String (award_name.getBytes("ISO-8859-1"),"UTF-8");
			} catch (UnsupportedEncodingException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			
			int namelength = awardForm.getUploadedFile().getFileName().length();
			String filePath = folderaward+"/"+dateFormat.format(date)+awardForm.getUploadedFile().getFileName().substring(namelength-4, namelength);
			//upload image Start
			try {
				outputStream = new FileOutputStream(new File(filePath));
				outputStream.write(awardForm.getUploadedFile().getFileData());			
			} catch (Exception e) {
				ActionErrors errors = new ActionErrors();
				errors.add("uploadedFile",new ActionMessage("errors.file.save",awardForm.getUploadedFile().getFileName()));
				
			}finally{
				if(outputStream != null)
					try {
						outputStream.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
			}
			//upload image End
			String pic_path = "upload/award/"+dateFormat.format(date)+awardForm.getUploadedFile().getFileName().substring(namelength-4, namelength);
			if(getErrors(request) == null ||getErrors(request).size() == 0){
				dbaward.insert_award(pic_path, slc_bu, award_name);
			}
			forwardText = "success";
// --------------------- Upload Start ---------------------------
		}else if(request.getParameter("delete") != null){
			
			forwardText = "success";
			String[] pic_path = request.getParameterValues("picpath");
			for(int i = 0 ; i <pic_path.length;i++){
				String chkbtn = request.getParameter("chkbtn"+i);
				if(chkbtn != null){
					if(!dbaward.delete_award(pic_path[i],getServlet().getServletContext().getRealPath("/")+"upload/award")){
						request.setAttribute("alert", "ไม่สามารถลบรูปภาพที่เลือกได้");
						
					}
				}
			}
		}
		
		return mapping.findForward(forwardText);
	}
}