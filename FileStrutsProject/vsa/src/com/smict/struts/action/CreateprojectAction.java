/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.smict.struts.action;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.upload.FormFile;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.smict.struts.data.DBProject;
import com.smict.struts.form.UploadForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-13-2015
 * 
 * XDoclet definition:
 * @struts.action path="/createproject" name="createprojectForm" input="createproject.jsp" scope="request" validate="true"
 */
public class CreateprojectAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UploadForm uploadForm = (UploadForm) form;// TODO Auto-generated method stub
		DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH-mm-ss");
		Date date = new Date();
		//Create Folder By Projectname
		FileOutputStream outputStream = null;
		File newFolder = new File(getServlet().getServletContext().getRealPath("/")+"upload\\"+request.getParameter("tb_projectname"));
		newFolder.mkdir();
//		FormFile countpic = uploadForm.getUploadedFile();
		//Upload Pic follow folder create
//		String filePath = newFolder+"\\"+uploadForm.getUploadedFile().getFileName();
//		List picture = new ArrayList();
//		picture.add(uploadForm.getUploadedFile().getFileName().length());
		int namelength = uploadForm.getUploadedFile().getFileName().length();
		String filePath = newFolder+"\\"+dateFormat.format(date)+uploadForm.getUploadedFile().getFileName().substring(namelength-4, namelength);
		try {
			outputStream = new FileOutputStream(new File(filePath));
			outputStream.write(uploadForm.getUploadedFile().getFileData());			
		} catch (Exception e) {
			ActionErrors errors = new ActionErrors();
			errors.add("uploadedFile",new ActionMessage("errors.file.save",uploadForm.getUploadedFile().getFileName()));
			saveErrors(request,errors);
		}finally{
			if(outputStream != null)
				try {
					outputStream.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		}
		String project_name = request.getParameter("tb_projectname"),
			   project_year = request.getParameter("tb_projectyear"),
			   slc_bu = request.getParameter("slc_bu"),
			   slc_typepj = request.getParameter("slc_typepj"),
			   pic_path = "upload/"+project_name+"/"+dateFormat.format(date)+uploadForm.getUploadedFile().getFileName().substring(namelength-4, namelength);
		project_year = "y"+project_year;
		
		
		if(getErrors(request) == null ||getErrors(request).size() == 0){
			uploadForm.setFileName(uploadForm.getUploadedFile().getFileName());
			DBProject dbproject = new DBProject();
			List buList = null;
			List Listforafterchoose = null;
			List pj_typeList = null;
			try {
				buList = dbproject.bu_nameList();
				dbproject.insproject_todb(project_name, project_year, slc_bu, pic_path,slc_typepj);
				Listforafterchoose = dbproject.afterchoose_edit(project_name);
				pj_typeList = dbproject.pj_typeList(slc_bu);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			request.setAttribute("buList", buList);
			request.setAttribute("slc_bu", slc_bu);
			request.setAttribute("project_name", project_name);
			request.setAttribute("project_year", project_year);
			request.setAttribute("slc_typepj", pj_typeList);
			request.setAttribute("Listforafterchoose", Listforafterchoose);
			return mapping.findForward("success");
		}
		else
			return mapping.getInputForward();
	}
}